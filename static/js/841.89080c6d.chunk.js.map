{"version":3,"file":"static/js/841.89080c6d.chunk.js","mappings":"uMA6EA,UA3DsB,WAAO,IAAD,QAC1B,GAAwCA,EAAAA,EAAAA,UAAS,IAAjD,eAAOC,EAAP,KAAqBC,EAArB,KACMC,GAAWC,EAAAA,EAAAA,MACTC,GAAaC,EAAAA,EAAAA,MAAbD,SACFE,GAAWC,EAAAA,EAAAA,QAAM,oBAACL,EAASM,aAAV,aAAC,EAAgBC,YAAjB,QAAyB,MAE1CC,EAAY,oBAAGR,EAASM,aAAZ,aAAG,EAAgBC,YAAnB,QAA2BH,EAASK,QAChDC,EAAO,IAAIC,KAAKb,EAAac,cAAcC,cACzCC,EACNhB,EADMgB,MAAOC,EACbjB,EADaiB,YAAaC,EAC1BlB,EAD0BkB,eAAgBC,EAC1CnB,EAD0CmB,aAAcC,EACxDpB,EADwDoB,SAAUC,EAClErB,EADkEqB,OASpE,OANAC,EAAAA,EAAAA,YAAU,YACRC,EAAAA,EAAAA,IAAgBnB,GAAUoB,MAAK,SAAAC,GAC7BxB,EAAgBwB,EAAIC,KACrB,GACF,GAAE,CAACtB,KAGF,iCACE,SAAC,KAAD,CAAUuB,GAAIjB,EAAd,sBACA,UAAC,KAAD,YACE,gBACEkB,IAAG,0CAAqCX,GACxCY,IAAKb,KAEP,UAAC,KAAD,YACE,UAAC,KAAD,WACGE,EADH,KACqBN,EADrB,QAGA,wCAAgBkB,KAAKC,MAAqB,GAAfZ,GAA3B,QACA,SAAC,KAAD,wBACA,uBAAIC,KACJ,SAAC,KAAD,sBACA,SAAC,KAAD,UACGC,EACGA,EAAOW,KAAI,SAAAC,GACT,OACE,SAAC,KAAD,WACE,uBAAmBA,EAAMC,MAAjBD,EAAME,KAGnB,IACD,kBAIV,UAAC,KAAD,YACE,SAAC,KAAD,WACE,SAAC,KAAD,CAAiBR,GAAG,OAApB,qBAEF,SAAC,KAAD,WACE,SAAC,KAAD,CAAiBA,GAAG,UAApB,2BAGJ,SAAC,KAAD,MAGL,C,kUCvEYS,GAAWC,EAAAA,EAAAA,IAAOC,EAAAA,GAAPD,CAAH,kNAaRE,EAAMF,EAAAA,GAAAA,IAAH,6KASHG,EAAYH,EAAAA,GAAAA,IAAH,yCAITI,EAAQJ,EAAAA,GAAAA,GAAH,uGAMLK,EAAUL,EAAAA,GAAAA,GAAH,uGAMPM,EAAaN,EAAAA,GAAAA,GAAH,qHAQVO,EAAaP,EAAAA,GAAAA,GAAH,8EAMVQ,EAAkBR,EAAAA,GAAAA,GAAH,qEAMfS,EAAkBT,EAAAA,GAAAA,GAAH,ogBAwBfU,GAAkBV,EAAAA,EAAAA,IAAOC,EAAAA,GAAPD,CAAH,sK","sources":["pages/MoviesDetails/MoviesDetails.jsx","pages/MoviesDetails/MoviesDetails.styled.jsx"],"sourcesContent":["import { useState, useEffect, useRef } from 'react';\nimport { useParams, useLocation, Outlet } from 'react-router-dom';\n\nimport { getMovieDetails } from 'api/getMovies';\n\nimport {\n  BackLink,\n  Box,\n  Title,\n  Options,\n  GenresList,\n  GenresItem,\n  MoviesBox,\n  DescriptionList,\n  DescriptionItem,\n  DescriptionLink,\n} from './MoviesDetails.styled';\n\nconst MoviesDetails = () => {\n  const [movieDetails, setMovieDetails] = useState([]);\n  const location = useLocation();\n  const { moviesId } = useParams();\n  const backPage = useRef(location.state?.from ?? null);\n\n  const backLinkHref = location.state?.from ?? backPage.current;\n  const date = new Date(movieDetails.release_date).getFullYear();\n  const { title, poster_path, original_title, vote_average, overview, genres } =\n    movieDetails;\n\n  useEffect(() => {\n    getMovieDetails(moviesId).then(res => {\n      setMovieDetails(res.data);\n    });\n  }, [moviesId]);\n\n  return (\n    <>\n      <BackLink to={backLinkHref}>Go back</BackLink>\n      <Box>\n        <img\n          src={`https://themoviedb.org/t/p/w400/${poster_path}`}\n          alt={title}\n        />\n        <MoviesBox>\n          <Title>\n            {original_title} ({date})\n          </Title>\n          <p>User score: {Math.round(vote_average * 10)}%</p>\n          <Options>Overview</Options>\n          <p>{overview}</p>\n          <Options>Genres</Options>\n          <GenresList>\n            {genres\n              ? genres.map(genre => {\n                  return (\n                    <GenresItem>\n                      <p key={genre.id}>{genre.name}</p>\n                    </GenresItem>\n                  );\n                })\n              : 'Unknow'}\n          </GenresList>\n        </MoviesBox>\n      </Box>\n      <DescriptionList>\n        <DescriptionItem>\n          <DescriptionLink to=\"Cast\">Cast</DescriptionLink>\n        </DescriptionItem>\n        <DescriptionItem>\n          <DescriptionLink to=\"Reviews\">Reviews</DescriptionLink>\n        </DescriptionItem>\n      </DescriptionList>\n      <Outlet />\n    </>\n  );\n};\n\nexport default MoviesDetails;\n","import { Link } from 'react-router-dom';\n\nimport styled from 'styled-components';\n\nexport const BackLink = styled(Link)`\n  margin-top: 20px;\n  margin-left: 10px;\n  text-decoration: none;\n  font-size: 20px;\n  line-height: 1.2;\n  font-weight: 500;\n  color: black;\n  :hover {\n    color: #6c1328;\n  }\n`;\n\nexport const Box = styled.div`\n  display: flex;\n  margin-left: 50px;\n  margin-right: 50px;\n  margin-top: 20px;\n  gap: 30px;\n  box-shadow: -1px 2px 15px 5px rgb(0 0 0 / 64%);\n`;\n\nexport const MoviesBox = styled.div`\n  width: 800px;\n`;\n\nexport const Title = styled.h1`\n  font-size: 24px;\n  line-height: 1.3;\n  font-weight: 700;\n  color: black;\n`;\nexport const Options = styled.h1`\n  font-size: 18px;\n  line-height: 1.3;\n  font-weight: 700;\n  color: black;\n`;\nexport const GenresList = styled.ul`\n  display: flex;\n  list-style: none;\n  &:not(:last-child) {\n    margin-right: 10px;\n  }\n`;\n\nexport const GenresItem = styled.ul`\n  &:not(:last-child) {\n    margin-right: 10px;\n  }\n`;\n\nexport const DescriptionList = styled.ul`\n  margin-left: 50px;\n  list-style: none;\n\n`;\n\nexport const DescriptionItem = styled.li`\n    width: 130px;\n    height: 35px;\n    margin-top: 30px;\n    border-radius: 40px;\n    font-family: Montserrat, sans-serif;\n    font-weight: 500;\n    font-size: 8px;\n    line-height: 45px;\n    text-decoration: none;\n    letter-spacing: 2px;\n    text-transform: uppercase;\n    text-align: center;\n    background: #c0ab91;\n    box-shadow: rgb(0 0 0 / 10%) 0px 8px 15px;\n    \n  &:not(:last-child) {\n    margin-bottom: 10px;\n  }\n  &:last-child {\n    margin-bottom: 30px;\n  }\n`;\n\nexport const DescriptionLink = styled(Link)`\n  text-decoration: none;\n  font-size: 20px;\n  line-height: 1.2;\n  font-weight: 500;\n  color: #6c1328;\n  :hover {\n    color: white;\n  }\n`;\n"],"names":["useState","movieDetails","setMovieDetails","location","useLocation","moviesId","useParams","backPage","useRef","state","from","backLinkHref","current","date","Date","release_date","getFullYear","title","poster_path","original_title","vote_average","overview","genres","useEffect","getMovieDetails","then","res","data","to","src","alt","Math","round","map","genre","name","id","BackLink","styled","Link","Box","MoviesBox","Title","Options","GenresList","GenresItem","DescriptionList","DescriptionItem","DescriptionLink"],"sourceRoot":""}